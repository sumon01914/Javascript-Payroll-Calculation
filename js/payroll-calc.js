var head_counter = 0;
    var payroll_heads = new Array();
	
	//you can load it dynamically . As per tis plugin, I load it as static data
   // var payroll_options = "<option value=''>[All Head]</option>{!!\App\Helpers\ComboHelper::getPayrollSalaryHeadDropDown()!!}"
    var payroll_options = "<option value=''>[All Head]</option><option value='35'>Attend. Bonus</option><option value='1'>Basic</option><option value='4'>Conveyance Allowance</option><option value='13'>Food Allowance</option><option value='20'>Gross Salary</option><option value='2'>House Rent</option><option value='14'>Incentives</option><option value='3'>Medical Allowance</option><option value='44'>PF Loan</option><option value='11'>Transport Allowance</option><option value='26'>Transport Contribution</option>";
	//I managed it dynamically. Loaded the payroll head from pph oage with database connection
	/*
    --------------------------------------------------------------------
    Payroll Heads Data (Generated by PHP)

    This JavaScript block is generated by PHP, but is commented out
    so it will not execute. Itâ€™s just an example for developers.

    If you want to use it, remove the comment markers.
    --------------------------------------------------------------------

    var payroll_heads = [];

    <?php
    foreach( $payrollHead as $payroll_id => $payroll ) {
        if( $payroll['type'] != 3 && $payroll['type'] != 4 && $payroll['type'] != 2 ) {
            echo "payroll_heads[".$payroll['id']."] = {};\n";
            foreach( $payroll as $key => $value ) {
                if( $key == 'id' ) {
                    echo "payroll_heads[".$payroll['id']."]['$key'] = $value;\n";
                } else {
                    echo "payroll_heads[".$payroll['id']."]['$key'] = '".addslashes($value)."';\n";
                }
            }
        }
    }
    ?>
*/
 payroll_heads[24] = new Array();
payroll_heads[24]['id'] = 24;
payroll_heads[24]['system_head'] = 'Absent';
payroll_heads[24]['custom_head'] = 'Absent';
payroll_heads[24]['type'] = '1';
payroll_heads[24]['salary_head'] = '0';
payroll_heads[24]['abbreviation'] = 'ABS';

payroll_heads[21] = new Array();
payroll_heads[21]['id'] = 21;
payroll_heads[21]['system_head'] = 'Advance';
payroll_heads[21]['custom_head'] = 'Advance';
payroll_heads[21]['type'] = '1';
payroll_heads[21]['salary_head'] = '0';
payroll_heads[21]['abbreviation'] = 'ADV';

payroll_heads[30] = new Array();
payroll_heads[30]['id'] = 30;
payroll_heads[30]['system_head'] = 'Arrear Deduction';
payroll_heads[30]['custom_head'] = 'Arrear Deduction';
payroll_heads[30]['type'] = '1';
payroll_heads[30]['salary_head'] = '0';
payroll_heads[30]['abbreviation'] = 'AD';



payroll_heads[35] = new Array();
payroll_heads[35]['id'] = 35;
payroll_heads[35]['system_head'] = 'Attendance Bonus';
payroll_heads[35]['custom_head'] = 'Attend. Bonus';
payroll_heads[35]['type'] = '0';
payroll_heads[35]['salary_head'] = '1';
payroll_heads[35]['abbreviation'] = 'AB';

payroll_heads[1] = new Array();
payroll_heads[1]['id'] = 1;
payroll_heads[1]['system_head'] = 'Basic';
payroll_heads[1]['custom_head'] = 'Basic';
payroll_heads[1]['type'] = '0';
payroll_heads[1]['salary_head'] = '1';
payroll_heads[1]['abbreviation'] = 'BS';

payroll_heads[15] = new Array();
payroll_heads[15]['id'] = 15;
payroll_heads[15]['system_head'] = 'Company PF Contribution';
payroll_heads[15]['custom_head'] = 'Company PF Contribution';
payroll_heads[15]['type'] = '0';
payroll_heads[15]['salary_head'] = '0';
payroll_heads[15]['abbreviation'] = 'PFC';

payroll_heads[42] = new Array();
payroll_heads[42]['id'] = 42;
payroll_heads[42]['system_head'] = 'Contribution to Rehabilitation';
payroll_heads[42]['custom_head'] = 'Contribution to Rehabilitation';
payroll_heads[42]['type'] = '1';
payroll_heads[42]['salary_head'] = '0';
payroll_heads[42]['abbreviation'] = 'CR';

payroll_heads[4] = new Array();
payroll_heads[4]['id'] = 4;
payroll_heads[4]['system_head'] = 'Conveyance Allowance';
payroll_heads[4]['custom_head'] = 'Conveyance Allowance';
payroll_heads[4]['type'] = '0';
payroll_heads[4]['salary_head'] = '1';
payroll_heads[4]['abbreviation'] = 'CA';

payroll_heads[10] = new Array();
payroll_heads[10]['id'] = 10;
payroll_heads[10]['system_head'] = 'Driver Allowance';
payroll_heads[10]['custom_head'] = 'Driver Allowance';
payroll_heads[10]['type'] = '0';
payroll_heads[10]['salary_head'] = '0';
payroll_heads[10]['abbreviation'] = '';

payroll_heads[43] = new Array();
payroll_heads[43]['id'] = 43;
payroll_heads[43]['system_head'] = 'Early Out Deduction';
payroll_heads[43]['custom_head'] = 'Early Out ';
payroll_heads[43]['type'] = '1';
payroll_heads[43]['salary_head'] = '0';
payroll_heads[43]['abbreviation'] = 'EOD';

payroll_heads[6] = new Array();
payroll_heads[6]['id'] = 6;
payroll_heads[6]['system_head'] = 'Extra Overtime';
payroll_heads[6]['custom_head'] = 'Extra Overtime';
payroll_heads[6]['type'] = '0';
payroll_heads[6]['salary_head'] = '0';
payroll_heads[6]['abbreviation'] = 'EO';

payroll_heads[13] = new Array();
payroll_heads[13]['id'] = 13;
payroll_heads[13]['system_head'] = 'Entertainment Allowance';
payroll_heads[13]['custom_head'] = 'Food Allowance';
payroll_heads[13]['type'] = '0';
payroll_heads[13]['salary_head'] = '1';
payroll_heads[13]['abbreviation'] = 'FA';

payroll_heads[7] = new Array();
payroll_heads[7]['id'] = 7;
payroll_heads[7]['system_head'] = 'Further Extra Overtime';
payroll_heads[7]['custom_head'] = 'Further Extra Overtime';
payroll_heads[7]['type'] = '0';
payroll_heads[7]['salary_head'] = '0';
payroll_heads[7]['abbreviation'] = '';

payroll_heads[20] = new Array();
payroll_heads[20]['id'] = 20;
payroll_heads[20]['system_head'] = 'Gross Salary';
payroll_heads[20]['custom_head'] = 'Gross Salary';
payroll_heads[20]['type'] = '0';
payroll_heads[20]['salary_head'] = '1';
payroll_heads[20]['abbreviation'] = 'GS';
payroll_heads[8] = new Array();
payroll_heads[8]['id'] = 8;
payroll_heads[8]['system_head'] = 'Holiday Allowance';
payroll_heads[8]['custom_head'] = 'Holiday Allowance';
payroll_heads[8]['type'] = '0';
payroll_heads[8]['salary_head'] = '0';
payroll_heads[8]['abbreviation'] = '';

payroll_heads[2] = new Array();
payroll_heads[2]['id'] = 2;
payroll_heads[2]['system_head'] = 'House Rent';
payroll_heads[2]['custom_head'] = 'House Rent';
payroll_heads[2]['type'] = '0';
payroll_heads[2]['salary_head'] = '1';
payroll_heads[2]['abbreviation'] = 'HR';

payroll_heads[36] = new Array();
payroll_heads[36]['id'] = 36;
payroll_heads[36]['system_head'] = 'ID Card Charge';
payroll_heads[36]['custom_head'] = 'ID Card Charge';
payroll_heads[36]['type'] = '1';
payroll_heads[36]['salary_head'] = '0';
payroll_heads[36]['abbreviation'] = '';

payroll_heads[14] = new Array();
payroll_heads[14]['id'] = 14;
payroll_heads[14]['system_head'] = 'Incentives';
payroll_heads[14]['custom_head'] = 'Incentives';
payroll_heads[14]['type'] = '0';
payroll_heads[14]['salary_head'] = '1';
payroll_heads[14]['abbreviation'] = '';

payroll_heads[14]['is_deleted'] = '0';
payroll_heads[23] = new Array();
payroll_heads[23]['id'] = 23;
payroll_heads[23]['system_head'] = 'Late Present';
payroll_heads[23]['custom_head'] = 'Late Present';
payroll_heads[23]['type'] = '1';
payroll_heads[23]['salary_head'] = '0';
payroll_heads[23]['abbreviation'] = '';

payroll_heads[27] = new Array();
payroll_heads[27]['id'] = 27;
payroll_heads[27]['system_head'] = 'Lunch Contribution';
payroll_heads[27]['custom_head'] = 'Lunch Contribution';
payroll_heads[27]['type'] = '1';
payroll_heads[27]['salary_head'] = '0';
payroll_heads[27]['abbreviation'] = '';

payroll_heads[29] = new Array();
payroll_heads[29]['id'] = 29;
payroll_heads[29]['system_head'] = 'Leave Without Pay';
payroll_heads[29]['custom_head'] = 'LWP';
payroll_heads[29]['type'] = '1';
payroll_heads[29]['salary_head'] = '0';
payroll_heads[29]['abbreviation'] = 'LWP';

payroll_heads[3] = new Array();
payroll_heads[3]['id'] = 3;
payroll_heads[3]['system_head'] = 'Medical Allowance';
payroll_heads[3]['custom_head'] = 'Medical Allowance';
payroll_heads[3]['type'] = '0';
payroll_heads[3]['salary_head'] = '1';
payroll_heads[3]['abbreviation'] = 'MA';

payroll_heads[38] = new Array();
payroll_heads[38]['id'] = 38;
payroll_heads[38]['system_head'] = 'DA';
payroll_heads[38]['custom_head'] = 'Mobile Allowance';
payroll_heads[38]['type'] = '0';
payroll_heads[38]['salary_head'] = '0';
payroll_heads[38]['abbreviation'] = 'DA';

payroll_heads[40] = new Array();
payroll_heads[40]['id'] = 40;
payroll_heads[40]['system_head'] = 'Night Allowance';
payroll_heads[40]['custom_head'] = 'Night Allowance';
payroll_heads[40]['type'] = '0';
payroll_heads[40]['salary_head'] = '0';
payroll_heads[40]['abbreviation'] = '';

payroll_heads[41] = new Array();
payroll_heads[41]['id'] = 41;
payroll_heads[41]['system_head'] = 'Overtime Allowance';
payroll_heads[41]['custom_head'] = 'Off day allowance';
payroll_heads[41]['type'] = '0';
payroll_heads[41]['salary_head'] = '0';
payroll_heads[41]['abbreviation'] = '';

payroll_heads[19] = new Array();
payroll_heads[19]['id'] = 19;
payroll_heads[19]['system_head'] = 'Other Earnings';
payroll_heads[19]['custom_head'] = 'Other Allowances';
payroll_heads[19]['type'] = '0';
payroll_heads[19]['salary_head'] = '0';
payroll_heads[19]['abbreviation'] = 'OA';

payroll_heads[31] = new Array();
payroll_heads[31]['id'] = 31;
payroll_heads[31]['system_head'] = 'Other Deduction';
payroll_heads[31]['custom_head'] = 'Other Deduct';
payroll_heads[31]['type'] = '1';
payroll_heads[31]['salary_head'] = '0';
payroll_heads[31]['abbreviation'] = '';

payroll_heads[5] = new Array();
payroll_heads[5]['id'] = 5;
payroll_heads[5]['system_head'] = 'Overtime';
payroll_heads[5]['custom_head'] = 'Overtime';
payroll_heads[5]['type'] = '0';
payroll_heads[5]['salary_head'] = '0';
payroll_heads[5]['abbreviation'] = '';

payroll_heads[12] = new Array();
payroll_heads[12]['id'] = 12;
payroll_heads[12]['system_head'] = 'Utility Allowance';
payroll_heads[12]['custom_head'] = 'personal allowance';
payroll_heads[12]['type'] = '0';
payroll_heads[12]['salary_head'] = '0';
payroll_heads[12]['abbreviation'] = '';

payroll_heads[44] = new Array();
payroll_heads[44]['id'] = 44;
payroll_heads[44]['system_head'] = 'PF Loan';
payroll_heads[44]['custom_head'] = 'PF Loan';
payroll_heads[44]['type'] = '1';
payroll_heads[44]['salary_head'] = '1';
payroll_heads[44]['abbreviation'] = 'PFL';

payroll_heads[25] = new Array();
payroll_heads[25]['id'] = 25;
payroll_heads[25]['system_head'] = 'Provident Fund Contribution';
payroll_heads[25]['custom_head'] = 'Provident Fund Contribution';
payroll_heads[25]['type'] = '1';
payroll_heads[25]['salary_head'] = '0';
payroll_heads[25]['abbreviation'] = '';

payroll_heads[25]['is_deleted'] = '0';
payroll_heads[37] = new Array();
payroll_heads[37]['id'] = 37;
payroll_heads[37]['system_head'] = 'Punishment Amount';
payroll_heads[37]['custom_head'] = 'Punishment Amount';
payroll_heads[37]['type'] = '1';
payroll_heads[37]['salary_head'] = '0';
payroll_heads[37]['abbreviation'] = '';

payroll_heads[28] = new Array();
payroll_heads[28]['id'] = 28;
payroll_heads[28]['system_head'] = 'Revenue Stamp';
payroll_heads[28]['custom_head'] = 'Stamp';
payroll_heads[28]['type'] = '1';
payroll_heads[28]['salary_head'] = '0';
payroll_heads[28]['abbreviation'] = '';
payroll_heads[28]['applicable_in_process'] = '1';

payroll_heads[22] = new Array();
payroll_heads[22]['id'] = 22;
payroll_heads[22]['system_head'] = 'Advance Income Tax';
payroll_heads[22]['custom_head'] = 'Tax';
payroll_heads[22]['type'] = '1';
payroll_heads[22]['salary_head'] = '0';
payroll_heads[22]['abbreviation'] = '';

payroll_heads[9] = new Array();
payroll_heads[9]['id'] = 9;
payroll_heads[9]['system_head'] = 'Tiffin Allowance';
payroll_heads[9]['custom_head'] = 'Tiffin Allowance';
payroll_heads[9]['type'] = '0';
payroll_heads[9]['salary_head'] = '0';
payroll_heads[9]['abbreviation'] = '';

payroll_heads[11] = new Array();
payroll_heads[11]['id'] = 11;
payroll_heads[11]['system_head'] = 'Vehicle Allowance';
payroll_heads[11]['custom_head'] = 'Transport Allowance';
payroll_heads[11]['type'] = '0';
payroll_heads[11]['salary_head'] = '1';
payroll_heads[11]['abbreviation'] = 'TA';

payroll_heads[26] = new Array();
payroll_heads[26]['id'] = 26;
payroll_heads[26]['system_head'] = 'Transport Contribution';
payroll_heads[26]['custom_head'] = 'Transport Contribution';
payroll_heads[26]['type'] = '1';
payroll_heads[26]['salary_head'] = '1';
payroll_heads[26]['abbreviation'] = 'TC';

	function add_salary_breakdown() {
        var head_counter=$('#salary tbody tr').length
        head_counter++;
        $('#salary tbody').append(
            '<tr class="policyRow">'
            + '<td>'
            + '<select name="payroll_head[]" id="payroll_head_' + head_counter + '" class="form-control">'
            + payroll_options
            + '</select>'
            + '</td>'
            + '<td>'
            + '<select name="type_display[]" id="type_display_' + head_counter + '" onchange="change_type( ' + head_counter + ' );set_value('+head_counter+',\'type_display\',\'type\')" class="form-control">'
            + '<option value="%">%</option>'
            + '<option value="Fixed">Fixed</option>'
            + '<option value="Formula">Formula</option>'
            + '</select><input type="hidden" name="type[]" value="" id="type_'+head_counter+'"/>'
            + '</td>'
            + '<td><input type="text" name="percentage_formula[]" id="percentage_formula_' + head_counter + '" onfocus="add_formula( ' + head_counter + ' );" onblur="calculate_amount( ' + head_counter + ' );" value="" class="form-control" /></td>'
            + '<td>'
            + '<select name="base_head_display[]" id="base_head_display_' + head_counter + '"  class="form-control" onchange="set_value('+head_counter+',\'base_head_display\',\'base_head\')">'
            + payroll_options
            + '</select><input type="hidden" name="base_head[]" value="" id="base_head_'+head_counter+'"/>'
            + '</td>'
            + '<td><div class="number_box"><input type="text" name="amount[]" id="amount_' + head_counter + '" value="0"  onblur="calculate_total();" class="form-control text-right" /></div></td>'
            + '<td><button id="remove_row" style="" class=" closebtn pull-right" type="button"><i class="fa fa-remove"></i></button></td>'
            + '</tr>'
        );
        change_type( head_counter );
    }
    function set_value(counter,primary_value,secondary_value){
        display_value=$('#'+primary_value+'_'+counter).val();
        $('#'+secondary_value+'_'+counter).val(display_value);
    }
    function salary_breakdown_policy_change( policy_id ) {
        if( policy_id != "" ) {
            $.ajax({
                url: base_url+"showPolicy",
                type: 'post',
                headers: headers,
                data:{policy_id:policy_id},
                dataType: 'html',
                cache: false,
                beforeSend:function(){
                    $('#salary tbody').html('<div class="spinner-small"></div>');
                },
                success: function(html) {
                    $('#salary tbody').html( html );
                    $('#total_salary').val('0.00');
                    head_counter = $('#salary tbody tr').length;
                },
                error: function(xhr) {
                    alert('Something went wrong.');
                }
            });
        }
        else {
            $('#salary tbody input[type="text"]').each(function() {
                //$(this).removeAttr( 'disabled' );
                $(this).removeAttr( 'readonly' );
            });
            $('#salary tbody select').each(function() { $(this).removeAttr( 'disabled' ); });
        }
    }
    function calculate_total() {
        var earning = 0;
        var deduction = 0;
        //alert($('#salary tbody tr').length);
        for( var i = 1; i <= $('#salary tbody tr').length; i++ )
        {
            //alert($('#payroll_head_5').val())
            for( var j = 1; j <= payroll_heads.length; j++ )
            {
                if(typeof(payroll_heads[j]) != 'undefined' &&$('#payroll_head_' + i).val() != "" && $('#payroll_head_' + i).val() == payroll_heads[j]['id'] )
                {
                    if( payroll_heads[j]['type'] == 0 ) earning += parseFloat( $('#amount_' + i).val() );
                    else deduction += parseFloat( $('#amount_' + i).val() );
                    break;
                }
            }
        }

        var grs=$('#gross_salary').val();
        //var rana=(earning);

        //alert(deduction+' '+earning);

        //alert(grs);
        var different_val=Math.abs(earning - grs);
        //alert(different_val);
        //var tot=((earning - deduction)+different_val);
        var tot=((earning - deduction));

        //alert(tot);
        //alert(earning+'==='+deduction);return;
        //alert(Math.floor( earning - deduction ));return;
        //alert( earning - deduction );
        //$('#total_salary').html( Math.floor( earning - deduction ) );
		//alert(tot);
        $('#total_salary').val(Math.floor(tot).toFixed(2));

    }
    function calculate_all() {
        //return false;
        if( $('#gross_salary').val() > 0 ) {
            //$('#total_salary').val("<img src='images/ajax-loader-red-circle.gif'/>");
          //  return;
            $('#gross_salary').removeClass('is-invalid');
            for( var i = 1; i <= $('#salary tbody tr').length; i++ ) {
                if( $('#payroll_head_' + i).val() == "" ) {
                    $('#payroll_head_' + i).parent().parent().remove();
                    head_counter--;
                    for( var j = i; j <= $('#salary tbody tr').length; j++ ) {
                        //alert('hi');//need to update the next ids if the deleted id is not the last
                    }
                }
                else if( $('#type_' + i).val() == 'Fixed' && $('#amount_' + i).val() < 1 ) {
                    alert('Please provide the fixed values first.');
                    return false;
                }
                else if( $('#type_' + i).val() == 'Fixed' ) {
                    $('#amount_' + i).val( parseFloat( $('#amount_' + i).val() ).toFixed( 2 ) );
                }
            }
            for( var i = 1; i <= $('#salary tbody tr').length; i++ ) {
                if( $('#type_' + i).val() == 'Formula' ) {
				//alert('s');
                    var formula = $('#percentage_formula_' + i).val();

                    var formula2 = '';
                    var abbreviation = '';
                    //console.log(formula.length);
                    for( var j = 0; j < formula.length; j++ ) {



                        if( formula.charCodeAt( j ) >= 40 && formula.charCodeAt( j ) <= 57 && formula.charCodeAt( j ) != 44 ) {
                          //  console.log(abbreviation);
                            if( abbreviation != '' ) {
                            //    console.log(abbreviation);
                                if( abbreviation == 'GS' ) {

                                    formula2 += $('#gross_salary').val();
                                }
                                else {
                                    //console.log( payroll_heads.length);
                                    for( var k = 0; k < payroll_heads.length; k++ ) {
                                      // console.log(k);
                                        if( payroll_heads[k] != undefined && payroll_heads[k]['abbreviation'] == abbreviation ) {
//console.log($('#salary tbody tr').length);
                                            for( var l = 1; l <= $('#salary tbody tr').length; l++ ) {
                                              //  console.log(payroll_heads[k]['id']);
                                                if( $('#payroll_head_' + l).val() == payroll_heads[k]['id'] ) {
                                                   // console.log(formula2);

                                                   // console.log(parseFloat( $('#amount_' + l).val() ));
                                                    if( parseFloat( $('#amount_' + l).val() ) < 1 ) {
                                                        alert( 'Please define ' + payroll_heads[k]['custom_head'] + ' first.' );
                                                        return false;
                                                    }
                                                    else
                                                    {
                                                        formula2 += parseFloat( $('#amount_' + l).val() );

                                                    }

                                                    break;
                                                }
                                            }
                                            break;
                                        }
                                    }
                                }
                                abbreviation = '';
                            }

                            formula2 += formula[j];
                           // console.log(formula2);
                        }
                        else abbreviation += formula[j];
                    }
                  //  console.log(formula2);
                    //formula2=1000;
                  //  alert('var formula_value = ' + formula2);return;
                    jQuery.globalEval( 'var formula_value = ' + formula2);
                 //   alert( parseFloat(formula_value.toFixed( 2 )));break;
                    $('#amount_' + i).val( parseFloat(formula_value.toFixed( 2 ) ));
                }
                else if( $('#type_' + i).val() == '%' ) {
                    if( $('#base_head_' + i).val() == 20 ) {
                        var percentage_value = $('#gross_salary').val() * $('#percentage_formula_' + i).val() / 100;
                       // alert(percentage_value);return;
                        $('#amount_' + i).val( parseFloat( percentage_value ).toFixed( 2 ) );

                    }
                    else {

                        for( var j = 1; j <= $('#salary tbody tr').length; j++ ) {
                            if( $('#payroll_head_' + j).val() == $('#base_head_' + i).val() ) {
                                //alert($('#payroll_head_' + j).val());
                                if( parseFloat( $('#amount_' + j).val() ) < 1 ) {
                                    alert( 'Undefined.' );
                                    return false;
                                }
                                else {
                                    var percentage_value = $('#amount_' + j).val() * $('#percentage_formula_' + i).val() / 100;
                                    $('#amount_' + i).val( parseFloat( percentage_value ).toFixed( 2 ) );
                                }
                                break;
                            }
                        }
                    }
                }
            }
        }
        else
        {
            alert( 'To calculate salary please provide gross salary' );
            $('#gross_salary').focus();
            $('#gross_salary').addClass('is-invalid');

        }

        calculate_total();
    }
    function change_type( counter ) {
        switch( $("#type_display_" + counter).val() ) {
            case '%':
                $('#percentage_container').html('Percentage');
                $("#percentage_formula_" + counter).removeAttr( 'readonly' );
                $("#base_head_display_" + counter).removeAttr( 'disabled' );
                $("#amount_" + counter).attr( 'readonly', 'true' );
                break;
            case 'Fixed':
                $("#percentage_formula_" + counter).attr( 'readonly', 'true' );
                $("#base_head_" + counter).val(  );
                $("#base_head_display_" + counter).attr( 'disabled', 'disabled' );
                $("#percentage_formula_" + counter).val( '' );
                $("#amount_" + counter).removeAttr( 'readonly' );
                break;
            case 'Formula':
                $('#percentage_container').html('Formula');
                $("#percentage_formula_" + counter).removeAttr( 'readonly' );
                $("#percentage_formula_" + counter).val( '' );
                $("#base_head_" + counter).val(  );
                $("#base_head_display_" + counter).attr( 'disabled', 'disabled' );
                $("#amount_" + counter).attr( 'readonly', 'true' );
                break;
        }
    }

    function calculate_amount( counter ) {
        var relatee = $('#base_head_' + counter).val();
        var add_value = 0;

        for( var i = 1; i <= head_counter; i++ ) {
            if( $('#payroll_head_' + i).val() == relatee ) {
                add_value = $('#amount_' + i).val() * $('#percentage_formula_' + counter).val() / 100;
                $('#amount_' + counter).val( parseFloat(add_value.toFixed( 2 )) );
                break;
            }
        }
        calculate_total();
    }
    function add_formula( counter ) {
	//alert('s');
       // alert($("#type_display_" + counter).val())
        if( $("#type_display_" + counter).val() == 'Formula' ) {
            $('.add-formula').attr('data-id', counter);
            $('input[name="formula"]').val( $("#percentage_formula_" + counter).val() );
            $('#calculator').modal({
                show: true,
                backdrop: 'static',
                keyboard: false,
                width: 200
            });
        }
    }
    function write_formula( btn_name ) {
        if( btn_name != 'backspace' ) {
            $('input[name="formula"]').val( $('input[name="formula"]').val() + $('button[name="' + btn_name + '"]').attr('fval') );
        }
        else {
            var text = $('input[name="formula"]').val();
            var backSpace = text.substr( 0, text.length - 1 );
            $('input[name="formula"]').val( backSpace );
        }
    }
    function reset_salary_form() {
        $('#salary tbody').html( '' );
        document.getElementById('emp_salary_form').reset();
    }
    function fnc_emp_salary(){

        var save_up=$("#save_up_salary").val();
        var save_up_break='';
        for( var i = 1; i <= $('#salary tbody tr').length; i++ )
        {
            save_up_break += $('#saveupamount_' + i).val();
        }
        //alert(save_up_break);return;

        $('#messagebox').removeClass().addClass('messagebox').text('Validating....').fadeIn(1000);
        var error = false;
        //salary_breakdown_policy_change($('#salary_rule').val());if( save_up=="" && save_perm==2){
        calculate_all();


        var gross = parseFloat( $('#gross_salary').val() );
        var amount = 0;
        for( var i = 1; i <= $('#salary tbody tr').length; i++ ) {
            for( var j = 1; j <= payroll_heads.length; j++ ) {
                if( typeof(payroll_heads[j]) != 'undefined' && payroll_heads[j]['id'] == $('#payroll_head_' + i).val() && payroll_heads[j]['salary_head'] == 1 ) {
                    //alert(i+'####'+$('#amount_' + i).val())
                    //amount += parseFloat( $('#amount_' + i).val() );
                    //amount += Math.floor( $('#amount_' + i).val() );
                    amount += parseFloat( $('#amount_' + i).val() );
                    //alert(amount);
                    //amount += Math.floor( $('#amount_' + i).val() );
                    //amount += Math.round( $('#amount_' + i).val() );
                    break;
                }
            }
        }
        var diff =Math.floor(Math.abs(gross - amount));
        //alert(diff);return;
        if( diff != 0 && ( diff < - 0.03 || diff > 0.03 ) ) {
            error = true;
            $('#messagebox').fadeTo( 200, 0.1, function() {
                $('#gross_salary').focus();
                $(this).html('Gross salary (' + gross + ') and total salary (' + amount + ') do not match (' + diff + ').').addClass('messageboxerror').fadeTo(900,1);
            });
        }
        else if( diff != 0 ) {
            for( var i = 1; i <= $('#salary tbody tr').length; i++ ) {
                if( $('#payroll_head_' + i).val() == 1 ) {
                    $('#amount_' + i).val( parseFloat( $('#amount_' + i).val() ) + diff );
                    break;
                }
            }
        }

        if( error == false ) {
            field_array[0] = new Array( 'emp_code', $('#emp_code').val() );
            field_array[1] = new Array( 'salary_grade', $('#salary_grade').val() );
            field_array[2] = new Array( 'salary_rule', $('#salary_rule').val() );
            field_array[3] = new Array( 'gross_salary', $('#gross_salary').val() );

            for( var i = 1; i <= $('#salary tbody tr').length; i++ ) {
                field_array[i + 3] = new Array( $('#payroll_head_' + i).val(), $('#type_' + i).val(), $('#percentage_formula_' + i).val(), $('#base_head_' + i).val(), $('#amount_' + i).val() );
            }

            nocache = Math.random();
            var data = '';
            for( var i = 0; i < field_array.length; i++ ) {
                if( i > 3 ) {
                    data += '&head' + ( i - 3 ) + '=';
                    for( var j = 0; j < field_array[i].length; j++ ) {
                        if( j > 0 ) data += '_';
                        data += field_array[i][j];
                    }
                }
                else data += '&' + field_array[i][0] + '=' + field_array[i][1];
            }
            data += '&head_counter=' + $('#salary tbody tr').length;
            //var bank_salary = $('#bank_salary').val();
            var cash_disbursement = $('#cash_disbursement').val();
            //alert(data);
            http.open( 'GET', base_url+'?c=employee&m=save_salary' + data +'&cash_disbursement=' +cash_disbursement+ '&nocache=' + nocache );
            http.onreadystatechange = response_emp_salary;
            http.send(null);
        }
    }
    //Employee Address Response of Employee Information ( Save / Update )
    function response_emp_salary() {
        //alert(http.responseText);
        if(http.readyState == 4) {
            var response = http.responseText.split('_');

            if( response[0] == 2 ) {
                $("#messagebox").fadeTo( 200, 0.1, function() {
                    $(this).html('Data Saved Successfully.').addClass('messagebox_ok').fadeTo(900,1);
                    save_activities_history('','hrm','employee information','save','../');
                    $(this).fadeOut(5000);
                });

            }
        }
    }
$(document).on('click', '#remove_row', function () {
    $(this).parents('.policyRow').remove();
});
$(document).ready(function(){

	$('#calculator').on("hide.bs.modal", function() {
		counter=$(".add-formula").attr("data-id");
		$("#percentage_formula_" + counter).val( $('input[name="formula"]').val() )
	})
	calculate_total();
});
function numbersonly(myfield, e, dec)
{
	var key;
	var keychar;

	if (window.event)
   		key = window.event.keyCode;
	else if (e)
    	key = e.which;
	else
   		return true;
	keychar = String.fromCharCode(key);

	// control keys
	if ((key==null) || (key==0) || (key==8) || (key==9) || (key==13) || (key==27) )
    return true;
	
	// numbers
	else if ((("0123456789.,-").indexOf(keychar) > -1))
   		return true;
	else
    	return false;
}